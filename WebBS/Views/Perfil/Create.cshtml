@model WebBS.Models.Perfil

@{
    ViewBag.Title = "Registrar Perfil";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Registrar Perfil</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        <hr />
        @Html.ValidationSummary(true)


        <div class="form-group">
            @Html.LabelFor(model => model.IdArea, "Area", new { @class = "control-label col-md-2" })
            <div class="col-md-6">

                 @Html.DropDownListFor(model => model.IdArea, @ViewBag.IdArea as SelectList, "Seleccione", new { @class = "form-control" })

                 @Html.ValidationMessageFor(model => model.IdArea, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IdPuesto, "Puesto", new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                @Html.DropDownListFor(model => model.IdPuesto, @ViewBag.IdPuesto as SelectList, "Seleccione", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.IdPuesto, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Nombre, new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "form-control"  } })
                @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Descripcion Funcional", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Descripcion, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Descripcion, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Caracteristicas Especificas", new { @class = "control-label col-md-2", @rows = 3 })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Caracteristicas, new { @class = "form-control" ,@rows=3})
                @Html.ValidationMessageFor(model => model.Caracteristicas)
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Sueldo Mínimo", new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                @Html.EditorFor(model => model.SueldoIni, new { htmlAttributes = new { @class = "form-control", @type = "number" ,@step="0.01" } })
                @Html.ValidationMessageFor(model => model.SueldoIni)
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Sueldo Máximo", new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                @Html.EditorFor(model => model.SueldoFin, new { htmlAttributes = new { @class = "form-control", @type = "number", @step = "0.01" } })
                @Html.ValidationMessageFor(model => model.SueldoFin)
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" name="btnRegistrar" value="Registrar" class="btn btn-default" />
                <input type="submit" name="btnRegistrarMas" value="Grabar y Registrar Nuevo Perfil" class="btn btn-default" />
             
                <input type="submit" name="btnCancelar" value="Cancelar" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Regresar", "Index")
</div>




    @Scripts.Render("~/bundles/jqueryval")
    <script language="javascript">
        $(document).ready(function () {
        //Dropdownlist Selectedchange event
        $("#IdArea").change(function () {
            $("#IdPuesto").empty();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetPuestos")', // we are calling json method

                dataType: 'json',

                data: { id: $("#IdArea").val() },
               // here we are get value of selected country and passing same value
                 // as inputto json method GetStates.

                success: function (puestos) {
                    // states contains the JSON formatted list
                    // of states passed from the controller

                    $.each(puestos, function (i, puesto) {
                        $("#IdPuesto").append('<option value="' + puesto.Value + '">' +
                         puesto.Text + '</option>');
                    // here we are adding option for States

                    });
                },
                error: function (ex) {
                    alert('Failed to retrieve states.' + ex);
                }
            });
            return false;
        })
        });


    
        $(document).ready(function () {
            $("#SueldoIni").keyup(SetValues);
            $("#SueldoFin").keyup(SetValues);
        });



        function SetValues(eventInstance) {
            $("#SueldoFin").attr({
                "min": $("#SueldoIni").val()          // values (or variables) here
            });

     
        }

    </script>

